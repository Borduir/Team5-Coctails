{"mappings":"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","sources":["src/js/coctails.js","node_modules/lodash.debounce/index.js","src/js/header.js"],"sourcesContent":["'use strict';\n// РАБОЧАЯ ВЕРСИЯ\nexport const coctailsList = document.querySelector(\n  '.coctails-section__coctails-list'\n);\nexport const coctailsSection = document.querySelector('.coctails-section');\nexport const coctailModal = document.querySelector(\n  '.coctails-section__coctail-modal'\n);\nexport const coctailModalBackdrop = document.querySelector(\n  '.coctails-section__coctail-modal-backdrop'\n);\nexport const ingredientModal = document.querySelector(\n  '.coctails-section__ingredient-modal'\n);\nexport const ingredientModalBackdrop = document.querySelector(\n  '.coctails-section__ingredient-modal-backdrop'\n);\n\n// переменная для подсчета к-ва коктейлей, которые нужно отрисовать\nexport let coctailsAmount = 0;\n// переменная для идентификации кнопок коктейля\nexport let coctailNumber = 0;\n// переменная для определения типа добавляемого в избранное(коктейль или ингредиент)\nexport let storageKey = 0;\n\nexport let searchIn = 0;\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                   НАЧАЛО ФУНКЦИЙ\n\n// функция, которая считает количество коктейлей,\n// которые нужно отрисовать в зависимости от разрешения экрана\nexport const getCocktailsAmount = section => {\n  const coctailsSectionStyles = getComputedStyle(section);\n  if (coctailsSectionStyles.width === '320px') {\n    coctailsAmount = 3;\n  } else if (coctailsSectionStyles.width === '768px') {\n    coctailsAmount = 6;\n  } else {\n    coctailsAmount = 9;\n  }\n};\n\n// функция, которая забирает у бекенда коктейли/ингредиенты по ссылке\nexport const fetchCoctailOrIngredient = async link => {\n  const response = await fetch(link);\n  const newResponse = await response.json();\n  return newResponse;\n};\n\n// функция, которая проверяет\n// находится ли коктейль или ингредиент в избранном\n// и меняет кнопку коктейля на \"добавить в избранное\" или \"убрать из избранного\"\nexport const checkFavoriteOrNot = (\n  coctailName,\n  typeOfFavorites,\n  likeBtn,\n  dislikeBtn,\n  text,\n  coctailNumber\n) => {\n  //узнаём какой тип избранного проверяем - коктейль или ингредиент\n  let currentFuncLikeBtn = '';\n  if (typeOfFavorites === favoriteCoctails) {\n    storageKey = 0;\n  } else if (typeOfFavorites === favoriteIngredients) {\n    storageKey = 1;\n  }\n  // если коктейль или игредиент находится в избранном\n  if (\n    JSON.parse(localStorage.getItem(localStorage.key(storageKey))).includes(\n      coctailName\n    )\n  ) {\n    // проверяем есть ли коктейль/ингредиент текущей итерации цикла\n    // в списке избранных\n    if (document.querySelector(`#ModalLikeIngredientBtn`)) {\n      currentFuncLikeBtn = document.querySelector(`#ModalLikeIngredientBtn`);\n    } else if (document.querySelector(`#ModalLikeCoctailBtn`)) {\n      currentFuncLikeBtn = document.querySelector(`#ModalLikeCoctailBtn`);\n    } else {\n      currentFuncLikeBtn = document.querySelector(`#likeBtn${coctailNumber}`);\n    }\n    // если есть - то меняем в разметке\n    // коктейля/ингредиента кнопку \"добавить в избранное\"\n    //на кнопку \"убрать из избранного\"\n    currentFuncLikeBtn.classList.remove(likeBtn);\n    currentFuncLikeBtn.classList.add(dislikeBtn);\n    currentFuncLikeBtn.textContent = text;\n  }\n};\n\n// функция, которая добавляет/удаляет коктейль/игредиент в избранное\n// и меняет кнопку \"добавить в избранное\" на \"удалить из избранного\" и наоборот\nexport const makeFavoriteOrNot = (\n  event,\n  likeButton,\n  dislikeButton,\n  currentItemlName,\n  typeOfFavorites\n) => {\n  //проверяем обрабатывается коктейль или ингредиент\n  if (typeOfFavorites === favoriteCoctails) {\n    storageKey = 0;\n  } else if (typeOfFavorites === favoriteIngredients) {\n    storageKey = 1;\n  }\n  // если событие словилось на кнопке \"добавить в избранное\",\n  // то добавляем в память массив с названиями избранных коктейлей/ингредиентов\n  // и меняем кнопку на \"убрать из избранного\"\n  if (event.target.classList.contains(likeButton)) {\n    event.target.textContent = 'Remove';\n    typeOfFavorites.push(currentItemlName);\n    localStorage.setItem(\n      localStorage.key(storageKey),\n      JSON.stringify(typeOfFavorites)\n    );\n    event.target.classList.toggle(dislikeButton);\n    event.target.classList.toggle(likeButton);\n    // если событие словилось на кнопке \"убрать из избранного\",\n    // то добавляем в память массив с названиями избранных коктейлей/ингредиентов,\n    // из которых предварительно удаляем текущий коктейль/ингредиент\n    // и меняем кнопку на \"добавить в избранное\"\n  } else if (event.target.classList.contains(dislikeButton)) {\n    event.target.textContent = 'Add to';\n    typeOfFavorites.splice(typeOfFavorites.indexOf(currentItemlName), 1);\n    localStorage.setItem(\n      localStorage.key(storageKey),\n      JSON.stringify(typeOfFavorites)\n    );\n    // переключаем кнопки \"добавить в избранное\" и \"удалить из избранного\"\n    event.target.classList.toggle(dislikeButton);\n    event.target.classList.toggle(likeButton);\n  }\n};\n\n// функция открытия/закрытия модалки\nexport const modalToggleHidden = (\n  backdropName,\n  backdropClass,\n  modalName,\n  modalClass\n) => {\n  backdropName.classList.toggle(backdropClass);\n  modalName.classList.toggle(modalClass);\n};\n\n// функция создания списка ингредиентов\nexport const createIngredients = coctail => {\n  const ingredientsList = document.querySelector('.coctail-modal__list');\n  for (const key in coctail) {\n    if (key.includes('strIngredient') && coctail[key] !== null) {\n      ingredientsList.innerHTML += `<li><button class=\"coctail-modal__ingredient\" type=\"button\">${coctail[key]}</button></li>`;\n    }\n  }\n};\n\n// функция изменения текста кнопок модалки(он отличается от того, что на главной странице)\nexport const modalButtonTextChange = (button, buttonClass) => {\n  if (button.classList.contains(buttonClass)) {\n    button.textContent = 'Add to favorite';\n  } else {\n    button.textContent = 'Remove from favorite';\n  }\n};\n\n// функция добавляет разметку карточки коктейля из текущей итерации цикла\n//с кнопкой \"добавить в избранное\"\nexport const coctailCardMarkup = (\n  markupPlace = '',\n  cocktailName = '',\n  cocktailImgLink = ''\n) => {\n  markupPlace.innerHTML += `<li class='coctails-section__coctail'>\n            <div class='coctails-section__coctail-container'>\n                <img class='coctails-section__coctail-img' srcset=\"${cocktailImgLink}\" alt=\"${cocktailName}\">\n                <h3 class='coctails-section__coctail-name'>${cocktailName}</h3>\n                <div class=\"coctails-section__coctail-buttons-container\">\n                    <button class=\"coctails-section__button coctails-section__learn-button\" type=\"button\">Learn more</button>\n                    <button class=\"coctails-section__button coctails-section__favorite-button coctails-section__like-button\" type=\"button\" id=\"likeBtn${coctailNumber}\">Add to</button>\n                </div>\n            </div>\n        </li>`;\n};\n\n// функция разметки модалки коктейля\nexport const coctailModalMarckup = (\n  marckupPlace,\n  coctailName,\n  coctailImgLink,\n  coctailInstructions\n) => {\n  marckupPlace.innerHTML = `<h3 class = \"coctail-modal__coctail-name\" >${coctailName}</h3>\n                  <h4 class = \"coctail-modal__coctail-description\">Instractions:</h4>\n                  <p class = \"coctail-modal__coctail-instruction\">${coctailInstructions}</p>\n                  <img class='coctails-section__coctail-img' src=\"${coctailImgLink}\" alt=\"${coctailName}\">\n                  <h4 class = \"coctail-modal__coctail-description\">Ingredients</h4>\n                  <p>Per cocktail</p>\n                  <ul class = \"coctail-modal__list\">\n                  </ul>\n                  <button class = \"coctail-modal__like-coctail-btn\" type=\"button\" id=\"ModalLikeCoctailBtn\">Add to favorite</button>\n                  <button class = \"coctail-modal__close-modal-btn\" type=\"button\"></button>\n                </div>`;\n};\n\n// функция разметки модалки ингредиента\nexport const ingredientModalMarckup = (\n  marckupPlace,\n  ingName,\n  ingDescription,\n  ingType,\n  ingAlcohol\n) => {\n  if (!ingDescription) ingDescription = 'sorry, we have no data :(';\n  if (!ingType) ingType = 'sorry, we have no data :(';\n  if (!ingAlcohol) ingAlcohol = 'sorry, we have no data :(';\n  marckupPlace.innerHTML = `<h3 class = \"coctail-modal__coctail-name\">${ingName}</h3>\n                        <p class = \"coctail-modal__coctail-instruction\">${ingDescription}</p>\n                        <ul class = \"coctail-modal__list\">\n                          <li><p class = \"coctail-modal__list-item-data\">Type: ${ingType}</p></li>\n                          <li><p  class = \"coctail-modal__list-item-data\">Alkoholic? - ${ingAlcohol}</p></li>\n                        </ul>\n                        <button class = \"ingredient-modal__like-ingredient-btn\" type=\"button\" id=\"ModalLikeIngredientBtn\">Add to favorite</button>\n                        <button class = \"ingredient-modal__close-ingredient-btn\" type=\"button\"></button>\n                        `;\n};\n//                   КОНЕЦ ФУНКЦИЙ\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                   НАЧАЛО ДВИЖУХИ\n\n// проверяем есть ли в памяти коктейли\nlet favoriteCoctails = [];\ntry {\n  if (JSON.parse(localStorage.getItem('favoriteCoctails')).length !== 0) {\n    favoriteCoctails = JSON.parse(localStorage.getItem('favoriteCoctails'));\n  }\n} catch {\n  localStorage.setItem('favoriteCoctails', JSON.stringify(favoriteCoctails));\n}\n\n// проверяем есть ли в памяти ингредиенты\nlet favoriteIngredients = [];\ntry {\n  if (JSON.parse(localStorage.getItem('favoriteIngredients')).length !== 0) {\n    favoriteIngredients = JSON.parse(\n      localStorage.getItem('favoriteIngredients')\n    );\n  }\n} catch {\n  localStorage.setItem(\n    'favoriteIngredients',\n    JSON.stringify(favoriteIngredients)\n  );\n}\n\n// определяем сколько карточек нужно отрисовать\ngetCocktailsAmount(coctailsSection);\n\n// дальше черная магия.\n// цикл делает столько итераций, сколько нужно отрисовать коктейлей\n//////////////////////////////////////////////////////////////////////////////////\n// НАЧАЛО ЦИКЛА\nexport default function mainFunction(searchIn, searchLink, amount) {\n  coctailsList.innerHTML = '';\n\n  for (let iteration = 0; iteration < amount; iteration += 1) {\n    // забираем у бекенда рандомный коктейль\n    fetchCoctailOrIngredient(searchLink)\n      .then(newResponse => {\n        if (searchIn !== 0) {\n          fetchCoctailOrIngredient(searchLink).then(newResponse => {\n            coctailsAmount = newResponse.drinks.length;\n          });\n        }\n        console.log(coctailsAmount);\n        // увеличиваем счетчик коклейлей на 1\n        coctailNumber += 1;\n        let coctailIterationNumber = 0;\n\n        if (searchIn) {\n          coctailIterationNumber = iteration;\n        }\n        const { strDrinkThumb = '', strDrink = '' } =\n          newResponse.drinks[coctailIterationNumber];\n\n        // создаем разметку карточки\n        coctailCardMarkup(coctailsList, strDrink, strDrinkThumb);\n        // const { strDrinkThumb, strDrink } = newResponse.drinks[iteration];\n\n        // проверяем находится ли коктейль или ингредиент в избранном\n        checkFavoriteOrNot(\n          strDrink,\n          favoriteCoctails,\n          'coctails-section__like-button',\n          'coctails-section__dislike-button',\n          'Remove',\n          coctailNumber\n        );\n\n        // выбираем все созданные карточки коктейлей(вне зависимости от итерации)\n        const coctailCards = document.querySelectorAll(\n          '.coctails-section__coctail-container'\n        );\n\n        //вешаем слушателя события на все КАРТОЧКИ коктейлей(именно на карточки)\n        coctailCards.forEach(elem => {\n          elem.addEventListener('click', event => {\n            //создаём переменную, которая будет содержать имя коктейля текущей итерации цикла\n            const currentItemlName = event.currentTarget.querySelector(\n              '.coctails-section__coctail-name'\n            ).textContent;\n            //добавляем/удаляем коктейль/игредиент в избранное\n            makeFavoriteOrNot(\n              event,\n              'coctails-section__like-button',\n              'coctails-section__dislike-button',\n              currentItemlName,\n              favoriteCoctails\n            );\n\n            // при нажатии на кнопку \"узнать больше\" на коктейле\n            if (\n              event.target.classList.contains('coctails-section__learn-button')\n            ) {\n              // запоминаем айди текущей кнопки лайка, чтоб если лайк ставился на модалке - менялась кнопка на главной\n              const currentCoctailNumber = event.currentTarget\n                .querySelector('.coctails-section__favorite-button')\n                .getAttribute('id');\n\n              // забираем у бекенда коктейль, на карточке которого открывается модалка\n              // и получаем всю нужную инфу для модалки\n              fetchCoctailOrIngredient(\n                `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${currentItemlName}`\n              ).then(newResponse => {\n                const coctail = newResponse;\n\n                const {\n                  strDrinkThumb = '',\n                  strDrink = '',\n                  strInstructions = '',\n                } = coctail.drinks[0];\n\n                // создаем изначальную разметку модалки\n                coctailModalMarckup(\n                  coctailModal,\n                  strDrink,\n                  strDrinkThumb,\n                  strInstructions\n                );\n\n                // создаём переменную текущей кнопки \"добавить в избранное\"\n                const modalLikeBtn = document.querySelector(\n                  '.coctail-modal__like-coctail-btn'\n                );\n\n                // проверяем находится ли коктейль в списке избранных,\n                // меняем текст кнопки в зависимости от того есть или нет\n                checkFavoriteOrNot(\n                  strDrink,\n                  favoriteCoctails,\n                  'coctail-modal__like-coctail-btn',\n                  'coctail-modal__dislike-coctail-btn',\n                  'Remove from favorites',\n                  coctailNumber\n                );\n\n                // вешаем слушателя события добавления/удаления в избранные\n                modalLikeBtn.addEventListener('click', event => {\n                  makeFavoriteOrNot(\n                    event,\n                    'coctail-modal__like-coctail-btn',\n                    'coctail-modal__dislike-coctail-btn',\n                    currentItemlName,\n                    favoriteCoctails\n                  );\n                  //меняем текст кнопки на длинный(на модалках он отличается)\n                  modalButtonTextChange(\n                    modalLikeBtn,\n                    'coctail-modal__like-coctail-btn'\n                  );\n                  // меняем так же копку добавления/удаления в избранное на главной странице\n                  const currentLikeButton = document.querySelector(\n                    `#${currentCoctailNumber}`\n                  );\n                  currentLikeButton.classList.toggle(\n                    'coctails-section__like-button'\n                  );\n                  currentLikeButton.classList.toggle(\n                    'coctails-section__dislike-button'\n                  );\n                  if (\n                    currentLikeButton.classList.contains(\n                      'coctails-section__like-button'\n                    )\n                  ) {\n                    currentLikeButton.textContent = 'Add to';\n                  } else {\n                    currentLikeButton.textContent = 'Remove';\n                  }\n                });\n\n                // открываем модалку\n                modalToggleHidden(\n                  coctailModalBackdrop,\n                  'coctails-section__coctail-modal-backdrop--is-hidden',\n                  coctailModal,\n                  'coctails-section__coctail-modal--is-hidden'\n                );\n\n                // вешаем на кнопку закрытия модалки функцию, которая закроет модалку\n                const closeCoctailModalBtn = document.querySelector(\n                  '.coctail-modal__close-modal-btn'\n                );\n                closeCoctailModalBtn.addEventListener('click', () => {\n                  modalToggleHidden(\n                    coctailModalBackdrop,\n                    'coctails-section__coctail-modal-backdrop--is-hidden',\n                    coctailModal,\n                    'coctails-section__coctail-modal--is-hidden'\n                  );\n                });\n\n                // создаем список ингредиентов\n                createIngredients(coctail.drinks[0]);\n                const modalIngredients = document.querySelectorAll(\n                  '.coctail-modal__ingredient'\n                );\n\n                // при клике на ингредиент\n                // забираем у бекенда его данные по его имени и создаем модалку\n                modalIngredients.forEach(elem => {\n                  elem.addEventListener('click', event => {\n                    const currentingredientName = event.target.innerText;\n                    fetchCoctailOrIngredient(\n                      `https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${currentingredientName}`\n                    )\n                      .then(newResponse => {\n                        const {\n                          strAlcohol,\n                          strDescription,\n                          strIngredient,\n                          strType,\n                        } = newResponse.ingredients[0];\n\n                        // создаем изначальную разметку модалки ингредиента\n                        ingredientModalMarckup(\n                          ingredientModal,\n                          strIngredient,\n                          strDescription,\n                          strType,\n                          strAlcohol\n                        );\n\n                        // создаём переменную кнопки \"добавить в избранное\" модалки ингредиента\n                        const ingredientModalLikeBtn = document.querySelector(\n                          '.ingredient-modal__like-ingredient-btn'\n                        );\n\n                        // проверяем есть ли ингредиент в избранном\n                        checkFavoriteOrNot(\n                          strIngredient,\n                          favoriteIngredients,\n                          'ingredient-modal__like-ingredient-btn',\n                          'ingredient-modal__dislike-ingredient-btn',\n                          'Remove from favorites',\n                          coctailNumber\n                        );\n\n                        // вешаем на кнопку \"добавить в избранное\" модалки ингредиента\n                        // функцию добавления/удаления в избранное\n                        ingredientModalLikeBtn.addEventListener(\n                          'click',\n                          event => {\n                            const currentItemlName = strIngredient;\n                            makeFavoriteOrNot(\n                              event,\n                              'ingredient-modal__like-ingredient-btn',\n                              'ingredient-modal__dislike-ingredient-btn',\n                              currentItemlName,\n                              favoriteIngredients\n                            );\n                            //меняем текст кнопки на длинный(на модалках он отличается)\n\n                            modalButtonTextChange(\n                              ingredientModalLikeBtn,\n                              'ingredient-modal__like-ingredient-btn'\n                            );\n                          }\n                        );\n                        // делаем переменную кнопки закрытия модалки ингредиента\n                        const closeIngredientlModalBtn = document.querySelector(\n                          '.ingredient-modal__close-ingredient-btn'\n                        );\n\n                        // открываем модалку\n                        modalToggleHidden(\n                          ingredientModalBackdrop,\n                          'coctails-section__ingredient-modal-backdrop--is-hidden',\n                          ingredientModal,\n                          'coctails-section__ingredient-modal--is-hidden'\n                        );\n\n                        // вешаем на кнопку закрытия модалки функцию, которая закроет модалку\n                        closeIngredientlModalBtn.addEventListener(\n                          'click',\n                          () => {\n                            modalToggleHidden(\n                              ingredientModalBackdrop,\n                              'coctails-section__ingredient-modal-backdrop--is-hidden',\n                              ingredientModal,\n                              'coctails-section__ingredient-modal--is-hidden'\n                            );\n                          }\n                        );\n                      })\n                      .catch(alert.log);\n                  });\n                });\n              });\n            }\n          });\n        });\n      })\n      .catch(console.log);\n  }\n}\nmainFunction(\n  0,\n  'https://www.thecocktaildb.com/api/json/v1/1/random.php',\n  coctailsAmount\n);\n\n// КОНЕЦ ЦИКЛА\n// СПАСИБО ЗА ВНИМАНИЕ :)\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","'use strict';\nimport debounce from 'lodash.debounce';\nimport mainFunction from './coctails';\n\nlet arrayLength = 0;\n\nconst BASE_URL = 'https://www.thecocktaildb.com/api/json/v1/1/';\nconst DEBOUNCE_DELAY = 500;\nconst refs = {\n  input: document.querySelector('.header-input'),\n  btn: document.querySelector('.menu-batton'),\n  mobileMenu: document.querySelector('.header-mobile-menu'),\n};\n\nrefs.input.addEventListener('input', debounce(onInput, DEBOUNCE_DELAY));\nfunction onInput(evt) {\n  let serchQuery = evt.target.value;\n  fetch(`${BASE_URL}search.php?s=${serchQuery}`)\n    .then(response => response.json())\n    .then(response => {\n      arrayLength = response.drinks.length;\n      console.log(arrayLength);\n      mainFunction(1, `${BASE_URL}search.php?s=${serchQuery}`, arrayLength);\n    });\n\n  // getCocktails(serchQuery)\n  //   .then(data => console.log(data))\n  //   .catch(erro => {\n  //     console.log(erro);\n  //   });\n}\n\n// function getCocktails(query) {\n//   return fetch(`${BASE_URL}search.php?s=${query}`).then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.statusText);\n//     }\n//     return response.json();\n//   });\n// }\n// ______________________________________________________\n// menu btn\nrefs.btn.addEventListener('click', onClick);\nfunction onClick() {\n  const expanded = refs.btn.getAttribute('aria-expanded') === 'true' || false;\n\n  refs.mobileMenu.classList.toggle('is-open');\n  refs.btn.setAttribute('aria-expanded', !expanded);\n}\n"],"names":["$a2ad4550b2df6780$export$3b192a374dab6aff","document","querySelector","$a2ad4550b2df6780$export$b7ca962cf519adab","$a2ad4550b2df6780$export$e7cda2758471ae79","$a2ad4550b2df6780$export$5977dc67bf0a41d6","$a2ad4550b2df6780$export$caa961a877c529df","$a2ad4550b2df6780$export$4ea49e8315c711be","$a2ad4550b2df6780$export$79c1dd9eae3b35cf","$a2ad4550b2df6780$export$1738f4cfe256437f","$a2ad4550b2df6780$export$7367158f2f597ab1","$a2ad4550b2df6780$export$422f9a0bc63ac997","async","link","response","fetch","json","$a2ad4550b2df6780$export$580a95f967d7fd0b","coctailName","typeOfFavorites","likeBtn","dislikeBtn","text","coctailNumber1","currentFuncLikeBtn","$a2ad4550b2df6780$var$favoriteCoctails","$a2ad4550b2df6780$var$favoriteIngredients","JSON","parse","localStorage","getItem","key","includes","classList","remove","add","textContent","$a2ad4550b2df6780$export$37a2f929d3644c","event","likeButton","dislikeButton","currentItemlName","target","contains","push","setItem","stringify","toggle","splice","indexOf","$a2ad4550b2df6780$export$ae080cb0d94c843c","backdropName","backdropClass","modalName","modalClass","$a2ad4550b2df6780$export$18d30b3ff396085a","coctail","ingredientsList","innerHTML","$a2ad4550b2df6780$export$50228975d1f17fe4","button","buttonClass","$a2ad4550b2df6780$export$9502f6b2791ff985","markupPlace","cocktailName","cocktailImgLink","$a2ad4550b2df6780$export$b305e1460e0842e1","marckupPlace","ingName","ingDescription","ingType","ingAlcohol","length","$a2ad4550b2df6780$export$2e2bcd8739ae039","searchIn1","searchLink","amount","iteration","then","newResponse1","newResponse","drinks","console","log","coctailIterationNumber","strDrinkThumb","strDrinkThumb1","strDrink","strDrink1","querySelectorAll","forEach","elem1","addEventListener","event1","currentItemlName1","currentTarget","currentCoctailNumber","getAttribute","newResponse2","strInstructions","coctailImgLink","coctailInstructions","modalLikeBtn","currentLikeButton","elem","event2","currentingredientName","innerText","strAlcohol","strDescription","strIngredient","strType","ingredients","ingredientModalLikeBtn","closeIngredientlModalBtn","catch","alert","section","coctailsSectionStyles","getComputedStyle","width","$a2ad4550b2df6780$export$f347f12aa9e84bc2","$3a60d30aee96367f$var$reTrim","$3a60d30aee96367f$var$reIsBadHex","$3a60d30aee96367f$var$reIsBinary","$3a60d30aee96367f$var$reIsOctal","$3a60d30aee96367f$var$freeParseInt","parseInt","$3a60d30aee96367f$var$freeGlobal","$parcel$global","Object","$3a60d30aee96367f$var$freeSelf","self","$3a60d30aee96367f$var$root","Function","$3a60d30aee96367f$var$objectToString","prototype","toString","$3a60d30aee96367f$var$nativeMax","Math","max","$3a60d30aee96367f$var$nativeMin","min","$3a60d30aee96367f$var$now","Date","now","$3a60d30aee96367f$var$isObject","value","type","$3a60d30aee96367f$var$toNumber","$3a60d30aee96367f$var$isObjectLike","call","$3a60d30aee96367f$var$isSymbol","other","valueOf","replace","isBinary","test","slice","$3a60d30aee96367f$exports","func","wait","options","lastArgs","lastThis","maxWait","result1","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","result","remainingWait","debounced","isInvoking","arguments","this","cancel","clearTimeout","flush","$8aad853c076397e7$var$arrayLength","$8aad853c076397e7$var$refs","input","btn","mobileMenu","$parcel$interopDefault","evt","serchQuery","$dXVlG","default","expanded","setAttribute"],"version":3,"file":"favorite-coctails.a62d53df.js.map"}