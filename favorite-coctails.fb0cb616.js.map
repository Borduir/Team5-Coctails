{"mappings":"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","sources":["src/js/coctails.js"],"sourcesContent":["'use strict';\n// РАБОЧАЯ ВЕРСИЯ\nexport const coctailsList = document.querySelector(\n  '.coctails-section__coctails-list'\n);\nexport const coctailsSection = document.querySelector('.coctails-section');\nexport const coctailModal = document.querySelector(\n  '.coctails-section__coctail-modal'\n);\nexport const coctailModalBackdrop = document.querySelector(\n  '.coctails-section__coctail-modal-backdrop'\n);\nexport const ingredientModal = document.querySelector(\n  '.coctails-section__ingredient-modal'\n);\nexport const ingredientModalBackdrop = document.querySelector(\n  '.coctails-section__ingredient-modal-backdrop'\n);\n\n// переменная для подсчета к-ва коктейлей, которые нужно отрисовать\nexport let coctailsAmount = 0;\n// переменная для идентификации кнопок коктейля\nexport let coctailNumber = 0;\n// переменная для определения типа добавляемого в избранное(коктейль или ингредиент)\nexport let storageKey = 0;\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                   НАЧАЛО ФУНКЦИЙ\n\n// функция, которая считает количество коктейлей,\n// которые нужно отрисовать в зависимости от разрешения экрана\nexport const getCocktailsAmount = section => {\n  const coctailsSectionStyles = getComputedStyle(section);\n  if (coctailsSectionStyles.width === '320px') {\n    coctailsAmount = 3;\n  } else if (coctailsSectionStyles.width === '768px') {\n    coctailsAmount = 6;\n  } else {\n    coctailsAmount = 9;\n  }\n};\n\n// функция, которая забирает у бекенда коктейли/ингредиенты по ссылке\nexport const fetchCoctailOrIngredient = async link => {\n  const response = await fetch(link);\n  const newResponse = await response.json();\n  return newResponse;\n};\n\n// функция, которая проверяет\n// находится ли коктейль или ингредиент в избранном\n// и меняет кнопку коктейля на \"добавить в избранное\" или \"убрать из избранного\"\nexport const checkFavoriteOrNot = (\n  coctailName,\n  typeOfFavorites,\n  likeBtn,\n  dislikeBtn,\n  text,\n  coctailNumber\n) => {\n  //узнаём какой тип избранного проверяем - коктейль или ингредиент\n  let currentFuncLikeBtn = '';\n  if (typeOfFavorites === favoriteCoctails) {\n    storageKey = 0;\n  } else if (typeOfFavorites === favoriteIngredients) {\n    storageKey = 1;\n  }\n  // если коктейль или игредиент находится в избранном\n  if (\n    JSON.parse(localStorage.getItem(localStorage.key(storageKey))).includes(\n      coctailName\n    )\n  ) {\n    // проверяем есть ли коктейль/ингредиент текущей итерации цикла\n    // в списке избранных\n    if (document.querySelector(`#ModalLikeIngredientBtn`)) {\n      currentFuncLikeBtn = document.querySelector(`#ModalLikeIngredientBtn`);\n    } else if (document.querySelector(`#ModalLikeCoctailBtn`)) {\n      currentFuncLikeBtn = document.querySelector(`#ModalLikeCoctailBtn`);\n    } else {\n      currentFuncLikeBtn = document.querySelector(`#likeBtn${coctailNumber}`);\n    }\n    // если есть - то меняем в разметке\n    // коктейля/ингредиента кнопку \"добавить в избранное\"\n    //на кнопку \"убрать из избранного\"\n    currentFuncLikeBtn.classList.remove(likeBtn);\n    currentFuncLikeBtn.classList.add(dislikeBtn);\n    currentFuncLikeBtn.textContent = text;\n  }\n};\n\n// функция, которая добавляет/удаляет коктейль/игредиент в избранное\n// и меняет кнопку \"добавить в избранное\" на \"удалить из избранного\" и наоборот\nexport const makeFavoriteOrNot = (\n  event,\n  likeButton,\n  dislikeButton,\n  currentItemlName,\n  typeOfFavorites\n) => {\n  //проверяем обрабатывается коктейль или ингредиент\n  if (typeOfFavorites === favoriteCoctails) {\n    storageKey = 0;\n  } else if (typeOfFavorites === favoriteIngredients) {\n    storageKey = 1;\n  }\n  // если событие словилось на кнопке \"добавить в избранное\",\n  // то добавляем в память массив с названиями избранных коктейлей/ингредиентов\n  // и меняем кнопку на \"убрать из избранного\"\n  if (event.target.classList.contains(likeButton)) {\n    event.target.textContent = 'Remove';\n    typeOfFavorites.push(currentItemlName);\n    localStorage.setItem(\n      localStorage.key(storageKey),\n      JSON.stringify(typeOfFavorites)\n    );\n    event.target.classList.toggle(dislikeButton);\n    event.target.classList.toggle(likeButton);\n    // если событие словилось на кнопке \"убрать из избранного\",\n    // то добавляем в память массив с названиями избранных коктейлей/ингредиентов,\n    // из которых предварительно удаляем текущий коктейль/ингредиент\n    // и меняем кнопку на \"добавить в избранное\"\n  } else if (event.target.classList.contains(dislikeButton)) {\n    event.target.textContent = 'Add to';\n    typeOfFavorites.splice(typeOfFavorites.indexOf(currentItemlName), 1);\n    localStorage.setItem(\n      localStorage.key(storageKey),\n      JSON.stringify(typeOfFavorites)\n    );\n    // переключаем кнопки \"добавить в избранное\" и \"удалить из избранного\"\n    event.target.classList.toggle(dislikeButton);\n    event.target.classList.toggle(likeButton);\n  }\n};\n\n// функция открытия/закрытия модалки\nexport const modalToggleHidden = (\n  backdropName,\n  backdropClass,\n  modalName,\n  modalClass\n) => {\n  backdropName.classList.toggle(backdropClass);\n  modalName.classList.toggle(modalClass);\n};\n\n// функция создания списка ингредиентов\nexport const createIngredients = coctail => {\n  const ingredientsList = document.querySelector('.coctail-modal__list');\n  for (const key in coctail) {\n    if (key.includes('strIngredient') && coctail[key] !== null) {\n      ingredientsList.innerHTML += `<li><button class=\"coctail-modal__ingredient\" type=\"button\">${coctail[key]}</button></li>`;\n    }\n  }\n};\n\n// функция изменения текста кнопок модалки(он отличается от того, что на главной странице)\nexport const modalButtonTextChange = (button, buttonClass) => {\n  if (button.classList.contains(buttonClass)) {\n    button.textContent = 'Add to favorite';\n  } else {\n    button.textContent = 'Remove from favorite';\n  }\n};\n\n// функция добавляет разметку карточки коктейля из текущей итерации цикла\n//с кнопкой \"добавить в избранное\"\nexport const coctailCardMarkup = (\n  markupPlace,\n  cocktailName,\n  cocktailImgLink\n) => {\n  markupPlace.innerHTML += `<li class='coctails-section__coctail'>\n            <div class='coctails-section__coctail-container'>\n                <img class='coctails-section__coctail-img' srcset=\"${cocktailImgLink}\" alt=\"${cocktailName}\">\n                <h3 class='coctails-section__coctail-name'>${cocktailName}</h3>\n                <div class=\"coctails-section__coctail-buttons-container\">\n                    <button class=\"coctails-section__button coctails-section__learn-button\" type=\"button\">Learn more</button>\n                    <button class=\"coctails-section__button coctails-section__favorite-button coctails-section__like-button\" type=\"button\" id=\"likeBtn${coctailNumber}\">Add to</button>\n                </div>\n            </div>\n        </li>`;\n};\n\n// функция разметки модалки коктейля\nexport const coctailModalMarckup = (\n  marckupPlace,\n  coctailName,\n  coctailImgLink,\n  coctailInstructions\n) => {\n  marckupPlace.innerHTML = `<h3 class = \"coctail-modal__coctail-name\" >${coctailName}</h3>\n                  <h4 class = \"coctail-modal__coctail-description\">Instractions:</h4>\n                  <p class = \"coctail-modal__coctail-instruction\">${coctailInstructions}</p>\n                  <img class='coctails-section__coctail-img' src=\"${coctailImgLink}\" alt=\"${coctailName}\">\n                  <h4 class = \"coctail-modal__coctail-description\">Ingredients</h4>\n                  <p>Per cocktail</p>\n                  <ul class = \"coctail-modal__list\">\n                  </ul>\n                  <button class = \"coctail-modal__like-coctail-btn\" type=\"button\" id=\"ModalLikeCoctailBtn\">Add to favorite</button>\n                  <button class = \"coctail-modal__close-modal-btn\" type=\"button\"></button>\n                </div>`;\n};\n\n// функция разметки модалки ингредиента\nexport const ingredientModalMarckup = (\n  marckupPlace,\n  ingName,\n  ingDescription,\n  ingType,\n  ingAlcohol\n) => {\n  if (!ingDescription) ingDescription = 'sorry, we have no data :(';\n  if (!ingType) ingType = 'sorry, we have no data :(';\n  if (!ingAlcohol) ingAlcohol = 'sorry, we have no data :(';\n  marckupPlace.innerHTML = `<h3 class = \"coctail-modal__coctail-name\">${ingName}</h3>\n                        <p class = \"coctail-modal__coctail-instruction\">${ingDescription}</p>\n                        <ul class = \"coctail-modal__list\">\n                          <li><p class = \"coctail-modal__list-item-data\">Type: ${ingType}</p></li>\n                          <li><p  class = \"coctail-modal__list-item-data\">Alkoholic? - ${ingAlcohol}</p></li>\n                        </ul>\n                        <button class = \"ingredient-modal__like-ingredient-btn\" type=\"button\" id=\"ModalLikeIngredientBtn\">Add to favorite</button>\n                        <button class = \"ingredient-modal__close-ingredient-btn\" type=\"button\"></button>\n                        `;\n};\n//                   КОНЕЦ ФУНКЦИЙ\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                   НАЧАЛО ДВИЖУХИ\n\n// проверяем есть ли в памяти коктейли\nlet favoriteCoctails = [];\ntry {\n  if (JSON.parse(localStorage.getItem('favoriteCoctails')).length !== 0) {\n    favoriteCoctails = JSON.parse(localStorage.getItem('favoriteCoctails'));\n  }\n} catch {\n  localStorage.setItem('favoriteCoctails', JSON.stringify(favoriteCoctails));\n}\n\n// проверяем есть ли в памяти ингредиенты\nlet favoriteIngredients = [];\ntry {\n  if (JSON.parse(localStorage.getItem('favoriteIngredients')).length !== 0) {\n    favoriteIngredients = JSON.parse(\n      localStorage.getItem('favoriteIngredients')\n    );\n  }\n} catch {\n  localStorage.setItem(\n    'favoriteIngredients',\n    JSON.stringify(favoriteIngredients)\n  );\n}\n\n// определяем сколько карточек нужно отрисовать\ngetCocktailsAmount(coctailsSection);\n\n// дальше черная магия.\n// цикл делает столько итераций, сколько нужно отрисовать коктейлей\n// НАЧАЛО ЦИКЛА\nfor (let iteration = 0; iteration < coctailsAmount; iteration += 1) {\n  // забираем у бекенда рандомный коктейль\n  fetchCoctailOrIngredient(\n    'https://www.thecocktaildb.com/api/json/v1/1/random.php'\n  )\n    .then(newResponse => {\n      // увеличиваем счетчик коклейлей на 1\n      coctailNumber += 1;\n\n      // создаем разметку карточки\n      const { strDrinkThumb, strDrink } = newResponse.drinks[0];\n      coctailCardMarkup(coctailsList, strDrink, strDrinkThumb);\n\n      // проверяем находится ли коктейль или ингредиент в избранном\n      checkFavoriteOrNot(\n        strDrink,\n        favoriteCoctails,\n        'coctails-section__like-button',\n        'coctails-section__dislike-button',\n        'Remove',\n        coctailNumber\n      );\n\n      // выбираем все созданные карточки коктейлей(вне зависимости от итерации)\n      const coctailCards = document.querySelectorAll(\n        '.coctails-section__coctail-container'\n      );\n\n      //вешаем слушателя события на все КАРТОЧКИ коктейлей(именно на карточки)\n      coctailCards.forEach(elem => {\n        elem.addEventListener('click', event => {\n          //создаём переменную, которая будет содержать имя коктейля текущей итерации цикла\n          const currentItemlName = event.currentTarget.querySelector(\n            '.coctails-section__coctail-name'\n          ).textContent;\n          //добавляем/удаляем коктейль/игредиент в избранное\n          makeFavoriteOrNot(\n            event,\n            'coctails-section__like-button',\n            'coctails-section__dislike-button',\n            currentItemlName,\n            favoriteCoctails\n          );\n\n          // при нажатии на кнопку \"узнать больше\" на коктейле\n          if (\n            event.target.classList.contains('coctails-section__learn-button')\n          ) {\n            // запоминаем айди текущей кнопки лайка, чтоб если лайк ставился на модалке - менялась кнопка на главной\n            const currentCoctailNumber = event.currentTarget\n              .querySelector('.coctails-section__favorite-button')\n              .getAttribute('id');\n\n            // забираем у бекенда коктейль, на карточке которого открывается модалка\n            // и получаем всю нужную инфу для модалки\n            fetchCoctailOrIngredient(\n              `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${currentItemlName}`\n            ).then(newResponse => {\n              const coctail = newResponse;\n              const { strDrinkThumb, strDrink, strInstructions } =\n                coctail.drinks[0];\n\n              // создаем изначальную разметку модалки\n              coctailModalMarckup(\n                coctailModal,\n                strDrink,\n                strDrinkThumb,\n                strInstructions\n              );\n\n              // создаём переменную текущей кнопки \"добавить в избранное\"\n              const modalLikeBtn = document.querySelector(\n                '.coctail-modal__like-coctail-btn'\n              );\n\n              // проверяем находится ли коктейль в списке избранных,\n              // меняем текст кнопки в зависимости от того есть или нет\n              checkFavoriteOrNot(\n                strDrink,\n                favoriteCoctails,\n                'coctail-modal__like-coctail-btn',\n                'coctail-modal__dislike-coctail-btn',\n                'Remove from favorites',\n                coctailNumber\n              );\n\n              // вешаем слушателя события добавления/удаления в избранные\n              modalLikeBtn.addEventListener('click', event => {\n                makeFavoriteOrNot(\n                  event,\n                  'coctail-modal__like-coctail-btn',\n                  'coctail-modal__dislike-coctail-btn',\n                  currentItemlName,\n                  favoriteCoctails\n                );\n                //меняем текст кнопки на длинный(на модалках он отличается)\n                modalButtonTextChange(\n                  modalLikeBtn,\n                  'coctail-modal__like-coctail-btn'\n                );\n                // меняем так же копку добавления/удаления в избранное на главной странице\n                const currentLikeButton = document.querySelector(\n                  `#${currentCoctailNumber}`\n                );\n                currentLikeButton.classList.toggle(\n                  'coctails-section__like-button'\n                );\n                currentLikeButton.classList.toggle(\n                  'coctails-section__dislike-button'\n                );\n                if (\n                  currentLikeButton.classList.contains(\n                    'coctails-section__like-button'\n                  )\n                ) {\n                  currentLikeButton.textContent = 'Add to';\n                } else {\n                  currentLikeButton.textContent = 'Remove';\n                }\n              });\n\n              // открываем модалку\n              modalToggleHidden(\n                coctailModalBackdrop,\n                'coctails-section__coctail-modal-backdrop--is-hidden',\n                coctailModal,\n                'coctails-section__coctail-modal--is-hidden'\n              );\n\n              // вешаем на кнопку закрытия модалки функцию, которая закроет модалку\n              const closeCoctailModalBtn = document.querySelector(\n                '.coctail-modal__close-modal-btn'\n              );\n              closeCoctailModalBtn.addEventListener('click', () => {\n                modalToggleHidden(\n                  coctailModalBackdrop,\n                  'coctails-section__coctail-modal-backdrop--is-hidden',\n                  coctailModal,\n                  'coctails-section__coctail-modal--is-hidden'\n                );\n              });\n\n              // создаем список ингредиентов\n              createIngredients(coctail.drinks[0]);\n              const modalIngredients = document.querySelectorAll(\n                '.coctail-modal__ingredient'\n              );\n\n              // при клике на ингредиент\n              // забираем у бекенда его данные по его имени и создаем модалку\n              modalIngredients.forEach(elem => {\n                elem.addEventListener('click', event => {\n                  const currentingredientName = event.target.innerText;\n                  fetchCoctailOrIngredient(\n                    `https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${currentingredientName}`\n                  )\n                    .then(newResponse => {\n                      const {\n                        strAlcohol,\n                        strDescription,\n                        strIngredient,\n                        strType,\n                      } = newResponse.ingredients[0];\n\n                      // создаем изначальную разметку модалки ингредиента\n                      ingredientModalMarckup(\n                        ingredientModal,\n                        strIngredient,\n                        strDescription,\n                        strType,\n                        strAlcohol\n                      );\n\n                      // создаём переменную кнопки \"добавить в избранное\" модалки ингредиента\n                      const ingredientModalLikeBtn = document.querySelector(\n                        '.ingredient-modal__like-ingredient-btn'\n                      );\n\n                      // проверяем есть ли ингредиент в избранном\n                      checkFavoriteOrNot(\n                        strIngredient,\n                        favoriteIngredients,\n                        'ingredient-modal__like-ingredient-btn',\n                        'ingredient-modal__dislike-ingredient-btn',\n                        'Remove from favorites',\n                        coctailNumber\n                      );\n\n                      // вешаем на кнопку \"добавить в избранное\" модалки ингредиента\n                      // функцию добавления/удаления в избранное\n                      ingredientModalLikeBtn.addEventListener(\n                        'click',\n                        event => {\n                          const currentItemlName = strIngredient;\n                          makeFavoriteOrNot(\n                            event,\n                            'ingredient-modal__like-ingredient-btn',\n                            'ingredient-modal__dislike-ingredient-btn',\n                            currentItemlName,\n                            favoriteIngredients\n                          );\n                          //меняем текст кнопки на длинный(на модалках он отличается)\n\n                          modalButtonTextChange(\n                            ingredientModalLikeBtn,\n                            'ingredient-modal__like-ingredient-btn'\n                          );\n                        }\n                      );\n                      // делаем переменную кнопки закрытия модалки ингредиента\n                      const closeIngredientlModalBtn = document.querySelector(\n                        '.ingredient-modal__close-ingredient-btn'\n                      );\n\n                      // открываем модалку\n                      modalToggleHidden(\n                        ingredientModalBackdrop,\n                        'coctails-section__ingredient-modal-backdrop--is-hidden',\n                        ingredientModal,\n                        'coctails-section__ingredient-modal--is-hidden'\n                      );\n\n                      // вешаем на кнопку закрытия модалки функцию, которая закроет модалку\n                      closeIngredientlModalBtn.addEventListener('click', () => {\n                        modalToggleHidden(\n                          ingredientModalBackdrop,\n                          'coctails-section__ingredient-modal-backdrop--is-hidden',\n                          ingredientModal,\n                          'coctails-section__ingredient-modal--is-hidden'\n                        );\n                      });\n                    })\n                    .catch(alert.log);\n                });\n              });\n            });\n          }\n        });\n      });\n    })\n    .catch(alert.log);\n}\n// КОНЕЦ ЦИКЛА\n// СПАСИБО ЗА ВНИМАНИЕ :)\n"],"names":["$a2ad4550b2df6780$export$3b192a374dab6aff","document","querySelector","$a2ad4550b2df6780$export$b7ca962cf519adab","$a2ad4550b2df6780$export$e7cda2758471ae79","$a2ad4550b2df6780$export$5977dc67bf0a41d6","$a2ad4550b2df6780$export$caa961a877c529df","$a2ad4550b2df6780$export$4ea49e8315c711be","$a2ad4550b2df6780$export$79c1dd9eae3b35cf","$a2ad4550b2df6780$export$1738f4cfe256437f","$a2ad4550b2df6780$export$7367158f2f597ab1","$a2ad4550b2df6780$export$422f9a0bc63ac997","async","link","response","fetch","json","$a2ad4550b2df6780$export$580a95f967d7fd0b","coctailName","typeOfFavorites","likeBtn","dislikeBtn","text","coctailNumber1","currentFuncLikeBtn","$a2ad4550b2df6780$var$favoriteCoctails","$a2ad4550b2df6780$var$favoriteIngredients","JSON","parse","localStorage","getItem","key","includes","classList","remove","add","textContent","$a2ad4550b2df6780$export$37a2f929d3644c","event","likeButton","dislikeButton","currentItemlName","target","contains","push","setItem","stringify","toggle","splice","indexOf","$a2ad4550b2df6780$export$ae080cb0d94c843c","backdropName","backdropClass","modalName","modalClass","$a2ad4550b2df6780$export$18d30b3ff396085a","coctail","ingredientsList","innerHTML","$a2ad4550b2df6780$export$50228975d1f17fe4","button","buttonClass","$a2ad4550b2df6780$export$b305e1460e0842e1","marckupPlace","ingName","ingDescription","ingType","ingAlcohol","length","section","coctailsSectionStyles","getComputedStyle","width","$a2ad4550b2df6780$export$f347f12aa9e84bc2","iteration","then","newResponse1","strDrinkThumb","strDrinkThumb1","strDrink","strDrink1","drinks","cocktailName","cocktailImgLink","querySelectorAll","forEach","elem1","addEventListener","event1","currentItemlName1","currentTarget","currentCoctailNumber","getAttribute","newResponse2","strInstructions","coctailImgLink","coctailInstructions","modalLikeBtn","currentLikeButton","elem","event2","currentingredientName","innerText","newResponse","strAlcohol","strDescription","strIngredient","strType","ingredients","ingredientModalLikeBtn","closeIngredientlModalBtn","catch","alert","log"],"version":3,"file":"favorite-coctails.fb0cb616.js.map"}