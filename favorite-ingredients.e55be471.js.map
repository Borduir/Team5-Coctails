{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,yDACA,MAAMC,EAA0BC,SAASC,cACvC,mDAEIC,EAAkBF,SAASC,cAC/B,uCAEIE,EAA0BH,SAASC,cACvC,gDASF,IAAIG,EAAmB,EACnBC,EAAsB,GAC1B,IACyE,IAAnEC,KAAKC,MAAMC,aAAaC,QAAQ,wBAAwBC,SAC1DL,EAAsBC,KAAKC,MACzBC,aAAaC,QAAQ,wB,CAGzB,MACAD,aAAaG,QACX,sBACAL,KAAKM,UAAUP,G,CAInB,IAAIQ,EAAyB,GACzBC,EAAI,EAER,MAAMC,EAAcT,KAAKC,MACvBC,aAAaC,QAAQ,wBACrBC,OACF,KAAQI,EAAIC,EAAaD,GAAK,EAAG,CAK/BD,EAJ2BP,KAAKC,MAC9BC,aAAaC,QAAQ,wBAGqBK,IAC5C,EAAAjB,EAAAmB,0BACE,4DAA4DH,KAC5DI,MAAKC,IACLd,GAAoB,EACpB,MAAMe,YAAEA,GAAgBD,GAChBE,cAAAC,EAAeC,QAAAC,GAAYJ,EAAY,GAC/CpB,EAAwByB,WAAa,8LAEwBH,wEACFE,iVAE6HnB,mDAIxL,EAAAP,EAAA4B,oBACEJ,EACA,4CACA,+CACA,SACAjB,EACA,eAGsBJ,SAAS0B,iBAC/B,kDAIcC,SAAQC,IACtBA,EAAKC,iBAAiB,SAASC,IAEwC,MAA/DC,EAAmBD,EAAME,cAAc/B,cAC3C,6CACAgC,YAY4B,IAVa,EAA3CpC,EAAAqC,mBACEJ,EACA,4CACA,+CACAC,EACA1B,EACA,eAKAyB,EAAMK,OAAOC,UAAUC,SACrB,8CAEF,CAEoF,MAA9EC,EAA0BR,EAAME,cACnC/B,cAAc,kDACdsC,aAAa,MAChBC,QAAQC,IAAIH,IAGoB,EAAhCzC,EAAAmB,0BACE,4DAA4De,KAC5Dd,MAAKyB,IACL,MAAMC,EAAaD,EACnBF,QAAQC,IAAIE,GACZ,MAAMC,WACJA,EAAa,GAAEC,eACfA,EAAiB,GAAEzB,cACnBA,EAAgB,GAAEE,QAClBA,EAAU,IACRqB,EAAWxB,YAAY,IAGM,EAAjCtB,EAAAiD,wBACE5C,EACAkB,EACAyB,EACAvB,EACAsB,GAI8C,MAA1CG,EAAyB/C,SAASC,cACtC,2CAK2C,EAA7CJ,EAAA4B,oBACEL,EACA,wCACA,2CACA,wBACAhB,EACA,eAIgD2C,EAA3BlB,iBAAiB,SAASmB,IAC/C,MAAMC,EAAmB7B,GACzB,EAAAvB,EAAAqC,mBACEc,EACA,wCACA,2CACAC,EACA5C,EACA,gBAG8C,EAAhDR,EAAAqD,uBACEH,EACA,6CAI2D,MAAvDI,EAAoBnD,SAASC,cACjC,IAAIqC,KAENa,EAAkBf,UAAUgB,OAC1B,6CAEFD,EAAkBf,UAAUgB,OAC1B,gDAGAD,EAAkBf,UAAUC,SAC1B,6CAGFc,EAAkBlB,YAAc,SAEhCkB,EAAkBlB,YAAc,SAElCO,QAAQC,IACNM,EACAA,EAAuBd,aAIvBc,EAAuBX,UAAUC,SAC/B,2CAGFU,EAAuBd,YAAc,kBAAiB,KAK1C,EAAhBpC,EAAAwD,mBACElD,EACA,yDACAD,EACA,iDAI+BF,SAASC,cACxC,2CAEuB4B,iBAAiB,SAAS,MACjD,EAAAhC,EAAAwD,mBACElD,EACA,yDACAD,EACA,gDACD,GACD,G,IAGN,GACF,G","sources":["src/js/favorite-ingredients.js"],"sourcesContent":["'use strict';\nconst favoriteIngredientsList = document.querySelector(\n  '.favorite-ingredients-section__ingredients-list'\n);\nconst ingredientModal = document.querySelector(\n  '.coctails-section__ingredient-modal'\n);\nconst ingredientModalBackdrop = document.querySelector(\n  '.coctails-section__ingredient-modal-backdrop'\n);\nimport { fetchCoctailOrIngredient } from './coctails';\nimport { checkFavoriteOrNot } from './coctails';\nimport { makeFavoriteOrNot } from './coctails';\nimport { modalToggleHidden } from './coctails';\nimport { modalButtonTextChange } from './coctails';\nimport { ingredientModalMarckup } from './coctails';\n\nlet ingredientNumber = 0;\nlet favoriteIngredients = [];\ntry {\n  if (JSON.parse(localStorage.getItem('favoriteIngredients')).length !== 0) {\n    favoriteIngredients = JSON.parse(\n      localStorage.getItem('favoriteIngredients')\n    );\n  }\n} catch {\n  localStorage.setItem(\n    'favoriteIngredients',\n    JSON.stringify(favoriteIngredients)\n  );\n}\n\nlet currentIngredientlName = '';\nlet i = 0;\n\nconst arrayLength = JSON.parse(\n  localStorage.getItem('favoriteIngredients')\n).length;\nfor (i; i < arrayLength; i += 1) {\n  const currentIngredients = JSON.parse(\n    localStorage.getItem('favoriteIngredients')\n  );\n\n  currentIngredientlName = currentIngredients[i];\n  fetchCoctailOrIngredient(\n    `https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${currentIngredientlName}`\n  ).then(newResponse => {\n    ingredientNumber += 1;\n    const { ingredients } = newResponse;\n    const { strIngredient, strType } = ingredients[0];\n    favoriteIngredientsList.innerHTML += `<li class=\"favorite-ingredients-section__ingredient\">\n        <div class=\"favorite-ingredients-section__ingredient-card\">\n          <h3 class=\"favorite-ingredients-section__card-title\">${strIngredient}</h3>\n          <p class=\"favorite-ingredients-section__card-type\">${strType}</p>\n          <button class=\"favorite-ingredients-section__button favorite-ingredients-section__learn-button\" type=\"button\">Learn more</button>\n                    <button class=\"favorite-ingredients-section__button favorite-ingredients-section__favorite-button favorite-ingredients-section__like-button\" type=\"button\" id=\"likeBtn${ingredientNumber}\">Add to</button>\n        </div>\n      </li>`;\n\n    checkFavoriteOrNot(\n      strIngredient,\n      'favorite-ingredients-section__like-button',\n      'favorite-ingredients-section__dislike-button',\n      'Remove',\n      ingredientNumber,\n      'Ingredients'\n    );\n    // выбираем все созданные карточки коктейлей(вне зависимости от итерации)\n    const ingredinetCards = document.querySelectorAll(\n      '.favorite-ingredients-section__ingredient-card'\n    );\n\n    //вешаем слушателя события на все КАРТОЧКИ коктейлей(именно на карточки)\n    ingredinetCards.forEach(elem => {\n      elem.addEventListener('click', event => {\n        //создаём переменную, которая будет содержать имя коктейля текущей итерации цикла\n        const currentItemlName = event.currentTarget.querySelector(\n          '.favorite-ingredients-section__card-title'\n        ).textContent;\n        //добавляем/удаляем коктейль/игредиент в избранное\n        makeFavoriteOrNot(\n          event,\n          'favorite-ingredients-section__like-button',\n          'favorite-ingredients-section__dislike-button',\n          currentItemlName,\n          favoriteIngredients,\n          'Ingredients'\n        );\n\n        // при нажатии на кнопку \"узнать больше\"\n        if (\n          event.target.classList.contains(\n            'favorite-ingredients-section__learn-button'\n          )\n        ) {\n          // запоминаем айди текущей кнопки лайка, чтоб если лайк ставился на модалке - менялась кнопка на главной\n          const currentIngredientNumber = event.currentTarget\n            .querySelector('.favorite-ingredients-section__favorite-button')\n            .getAttribute('id');\n          console.log(currentIngredientNumber);\n          // забираем у бекенда коктейль, на карточке которого открывается модалка\n          // и получаем всю нужную инфу для модалки\n          fetchCoctailOrIngredient(\n            `https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${currentItemlName}`\n          ).then(newResponse => {\n            const ingredient = newResponse;\n            console.log(ingredient);\n            const {\n              strAlcohol = '',\n              strDescription = '',\n              strIngredient = '',\n              strType = '',\n            } = ingredient.ingredients[0];\n\n            // создаем изначальную разметку модалки\n            ingredientModalMarckup(\n              ingredientModal,\n              strIngredient,\n              strDescription,\n              strType,\n              strAlcohol\n            );\n\n            // создаём переменную текущей кнопки \"добавить в избранное\"\n            const ingredientModalLikeBtn = document.querySelector(\n              '.ingredient-modal__like-ingredient-btn'\n            );\n\n            // проверяем находится ли коктейль в списке избранных,\n            // меняем текст кнопки в зависимости от того есть или нет\n            checkFavoriteOrNot(\n              strIngredient,\n              'ingredient-modal__like-ingredient-btn',\n              'ingredient-modal__dislike-ingredient-btn',\n              'Remove from favorites',\n              ingredientNumber,\n              'Ingredients'\n            );\n\n            // вешаем слушателя события добавления/удаления в избранные\n            ingredientModalLikeBtn.addEventListener('click', event => {\n              const currentItemlName = strIngredient;\n              makeFavoriteOrNot(\n                event,\n                'ingredient-modal__like-ingredient-btn',\n                'ingredient-modal__dislike-ingredient-btn',\n                currentItemlName,\n                favoriteIngredients,\n                'Ingredients'\n              );\n              //меняем текст кнопки на длинный(на модалках он отличается)\n              modalButtonTextChange(\n                ingredientModalLikeBtn,\n                'favorite-ingredients-section__like-button'\n              );\n\n              // меняем так же копку добавления/удаления в избранное на главной странице\n              const currentLikeButton = document.querySelector(\n                `#${currentIngredientNumber}`\n              );\n              currentLikeButton.classList.toggle(\n                'favorite-ingredients-section__like-button'\n              );\n              currentLikeButton.classList.toggle(\n                'favorite-ingredients-section__dislike-button'\n              );\n              if (\n                currentLikeButton.classList.contains(\n                  'favorite-ingredients-section__like-button'\n                )\n              ) {\n                currentLikeButton.textContent = 'Add to';\n              } else {\n                currentLikeButton.textContent = 'Remove';\n              }\n              console.log(\n                ingredientModalLikeBtn,\n                ingredientModalLikeBtn.textContent\n              );\n\n              if (\n                ingredientModalLikeBtn.classList.contains(\n                  'ingredient-modal__like-ingredient-btn'\n                )\n              ) {\n                ingredientModalLikeBtn.textContent = 'Add to favorite';\n              }\n            });\n\n            // открываем модалку\n            modalToggleHidden(\n              ingredientModalBackdrop,\n              'coctails-section__ingredient-modal-backdrop--is-hidden',\n              ingredientModal,\n              'coctails-section__ingredient-modal--is-hidden'\n            );\n\n            // вешаем на кнопку закрытия модалки функцию, которая закроет модалку\n            const closeIngredientlModalBtn = document.querySelector(\n              '.ingredient-modal__close-ingredient-btn'\n            );\n            closeIngredientlModalBtn.addEventListener('click', () => {\n              modalToggleHidden(\n                ingredientModalBackdrop,\n                'coctails-section__ingredient-modal-backdrop--is-hidden',\n                ingredientModal,\n                'coctails-section__ingredient-modal--is-hidden'\n              );\n            });\n          });\n        }\n      });\n    });\n  });\n}\n"],"names":["$dXVlG","parcelRequire","$86410e3eb13ab2ec$var$favoriteIngredientsList","document","querySelector","$86410e3eb13ab2ec$var$ingredientModal","$86410e3eb13ab2ec$var$ingredientModalBackdrop","$86410e3eb13ab2ec$var$ingredientNumber","$86410e3eb13ab2ec$var$favoriteIngredients","JSON","parse","localStorage","getItem","length","setItem","stringify","$86410e3eb13ab2ec$var$currentIngredientlName","$86410e3eb13ab2ec$var$i","$86410e3eb13ab2ec$var$arrayLength","fetchCoctailOrIngredient","then","newResponse1","ingredients","strIngredient","strIngredient1","strType","strType1","innerHTML","checkFavoriteOrNot","querySelectorAll","forEach","elem","addEventListener","event1","currentItemlName1","currentTarget","textContent","makeFavoriteOrNot","target","classList","contains","currentIngredientNumber","getAttribute","console","log","newResponse","ingredient","strAlcohol","strDescription","ingredientModalMarckup","ingredientModalLikeBtn","event","currentItemlName","modalButtonTextChange","currentLikeButton","toggle","modalToggleHidden"],"version":3,"file":"favorite-ingredients.e55be471.js.map"}